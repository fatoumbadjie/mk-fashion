{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\HT\\\\Desktop\\\\mk-fashion\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nconst config = {\n  apiKey: \"AIzaSyBgcd3KAVt8QlDupQbXagzowJ-wYklV9jQ\",\n  authDomain: \"crown-db-35ef1.firebaseapp.com\",\n  projectId: \"crown-db-35ef1\",\n  storageBucket: \"crown-db-35ef1.appspot.com\",\n  messagingSenderId: \"235839991295\",\n  appId: \"1:235839991295:web:ea043e0abfcb2a85130bca\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalDate) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalDate));\n    } catch {\n      console.log('error creating user');\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:\\Users\\HT\\Desktop\\mk-fashion\\client\\src\\firebase\\firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalDate","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","console","log","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,sBAAP;AACA,OAAO,2BAAP;AAEA,MAAMC,MAAM,GAAG;AAEPC,EAAAA,MAAM,EAAE,yCAFD;AAGPC,EAAAA,UAAU,EAAE,gCAHL;AAIPC,EAAAA,SAAS,EAAE,gBAJJ;AAKPC,EAAAA,aAAa,EAAE,4BALR;AAMPC,EAAAA,iBAAiB,EAAE,cANZ;AAOPC,EAAAA,KAAK,EAAE;AAPA,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAgBC,cAAhB,KAAkC;AACvE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEJ,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAAA,UACTC,WADS,GACYT,QADZ,CACTS,WADS;AAAA,UACGC,KADH,GACYV,QADZ,CACGU,KADH;AAEhB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACC,YAAMV,OAAO,CAACW,GAAR;AACFJ,QAAAA,WADE;AAEFC,QAAAA,KAFE;AAGFC,QAAAA;AAHE,SAICV,cAJD,EAAN;AAMH,KAPD,CAQA,MAAK;AACDa,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;AACJ;;AACD,SAAOb,OAAP;AAEC,CAzBM;AA2BPX,QAAQ,CAACyB,aAAT,CAAuBxB,MAAvB;AAEA,OAAO,MAAMyB,IAAI,GAAG1B,QAAQ,CAAC0B,IAAT,EAAb;AACP,OAAO,MAAMd,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AAEP,MAAMe,QAAQ,GAAG,IAAI3B,QAAQ,CAAC0B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe3B,QAAf","sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nconst config = {\n    \n        apiKey: \"AIzaSyBgcd3KAVt8QlDupQbXagzowJ-wYklV9jQ\",\n        authDomain: \"crown-db-35ef1.firebaseapp.com\",\n        projectId: \"crown-db-35ef1\",\n        storageBucket: \"crown-db-35ef1.appspot.com\",\n        messagingSenderId: \"235839991295\",\n        appId: \"1:235839991295:web:ea043e0abfcb2a85130bca\"\n      \n};\n\nexport const createUserProfileDocument = async(userAuth, additionalDate) =>{\n    if(!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n    const snapShot = await userRef.get();\n\nif(!snapShot.exists){\n    const {displayName,email} = userAuth;\n    const createdAt = new Date();\n    \n    try{\n        await userRef.set({\n            displayName,\n            email,\n            createdAt,\n            ...additionalDate\n        })\n    }\n    catch{\n        console.log('error creating user');\n    }\n}\nreturn userRef;\n\n}\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt: 'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}